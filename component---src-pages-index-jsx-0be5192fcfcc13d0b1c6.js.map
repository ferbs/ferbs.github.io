{"version":3,"sources":["webpack:///./src/pages-support/home/Ferbasaurus.jsx","webpack:///./src/pages/index.jsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Page.jsx"],"names":["Ferbasaurus","componentDidMount","Granim","element","name","opacity","states","default-state","gradients","loop","direction","render","react","className","id","Definition","word","React","_ref","children","Index","graphqlData","Page","pageName","Ferbasaurus_Ferbasaurus","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","string","isRequired","StaticQueryContext","createContext","StaticQuery","props","react_default","a","Consumer","staticQueryData","data","query","object","func","PageHead","_ref2","bodyAttributes","class","bodyClass","join","trim","gatsby_browser_entry_StaticQuery","meta","dotProp","get","Helmet_default","lang","title","content","property","baseUrl","rel","sizes","href","type","color","_2069409925","Fragment"],"mappings":"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","file":"component---src-pages-index-jsx-0be5192fcfcc13d0b1c6.js","sourcesContent":["import * as React from \"react\";\nimport Granim from 'granim';\nimport './Ferbasaurus.scss';\n\n\nexport default class Ferbasaurus extends React.Component {\n\n  componentDidMount() {\n    // see https://github.com/sarcadass/granim.js\n    new Granim({\n      element: '#gradient-canvas',\n      name: 'granim',\n      opacity: [1, 1],\n      states : {\n        \"default-state\": {\n          gradients: [\n            ['#192a80', '#45735a'],\n            ['#095266', '#5c9977'],\n            ['#24b369', '#095266'],\n            ['#45735a', '#192a80'],\n          ]\n        }\n      },\n      loop: true,\n      direction: 'top-bottom'\n    });\n  }\n\n  render() {\n    return <div className=\"ferbasaurus container\">\n      <canvas id=\"gradient-canvas\"></canvas>\n      <h1>Ferbasaurus</h1>\n\n      <div className=\"columns is-multiline\">\n        <Definition word=\"ferbasaurus\">\n          <li>a reference source in print or electronic form containing ferbonyms</li>\n          <li>An overweight Ferber</li>\n        </Definition>\n\n        <Definition word=\"ferbify\">\n          <li>to do as a Ferber would do</li>\n        </Definition>\n\n        <Definition word=\"ferbivore\">\n          <li>Those who eat what Ferbers eat</li>\n        </Definition>\n\n        <Definition word=\"ferbography\">\n          <li>study of location of all Ferber's in the world</li>\n        </Definition>\n\n\n        <Definition word=\"ferbonomy\">\n          <li>the search for extra-terrestrial Ferbers</li>\n        </Definition>\n\n        <Definition word=\"ferbtastic\">\n          <li>this needs no definition. It is ferbtastic.</li>\n        </Definition>\n\n        <Definition word=\"ferbble\">\n          <li>to overwhelm a non-Ferber with strong Ferber personality</li>\n        </Definition>\n\n        <Definition word=\"ferbose\">\n          <li>Using more words than what a Ferber will sit through</li>\n        </Definition>\n\n        <Definition word=\"ferbonym\">\n          <li>a word having the same or nearly the same meaning as another in Ferbish, ie Ferbtastic, Ferbcellent.</li>\n        </Definition>\n        <Definition word=\"ferberite\">\n          <li>a mineral FeWO4 consisting of a valuable ferrous tungstate occurring in black granular masses</li>\n          <li>a Ferber under four feet tall</li>\n          <li>Ferber kryptonite: Hungarian desserts (kremes, gesztenyepüré, etc)</li>\n        </Definition>\n      </div>\n    </div>;\n  }\n}\n\nfunction Definition({ word, children }) {\n  return <div className=\"column is-full-mobile is-half-desktop\">\n    <div className=\"card\">\n      <dl>\n        <dt>{ word }</dt>\n        <dd>\n          <ol>\n            { children }\n          </ol>\n        </dd>\n      </dl>\n    </div>\n  </div>\n}\n\n/*\n\n<dl>\n        <dt>ferbaby</dt>\n        <dd>\n          <ol>\n            <li>Ferber under the age of two years old. (ferbonym of \"ferbrat.\")</li>\n            <li>Ferber who is acting cranky (typically due to hunger.)</li>\n          </ol>\n        </dd>\n      </dl>\n\n      <dl>\n        <dt>ferbcrastinate</dt>\n        <dd>\n          <ol>\n            <li>putting off a task that isn't ferbtastic</li>\n          </ol>\n        </dd>\n      </dl>\n */\n","import * as React from 'react'\r\nimport Page from \"../components/Page\";\r\n// import { Link } from \"gatsby\";\r\nimport './home.scss';\r\nimport Ferbasaurus from \"../pages-support/home/Ferbasaurus\";\r\n\r\n\r\nconst Index = (graphqlData, ...extraArgs) => {\r\n  return <Page pageName=\"home\">\r\n    <Ferbasaurus/>\r\n  </Page>;\r\n};\r\n\r\nexport default Index\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport Helmet from 'react-helmet'\nimport 'typeface-montserrat'\nimport dotProp from 'dot-prop';\nimport { StaticQuery, graphql } from 'gatsby'\nimport '../scss-support/_bulma-custom.scss';\nimport './Page.scss';\n\n\nconst Page = ({ children, pageName }) => {\n  return <>\n    <PageHead pageName={pageName}/>\n    <div className={ `page-content` }>\n      {children}\n    </div>\n  </>;\n};\n\n\nfunction PageHead({ pageName, bodyClass }) {\n  const bodyAttributes = {\n    class: [ `${pageName}-page`, bodyClass || '' ].join(' ').trim()\n  };\n  // site.siteMetadata set in gatsby-config.js. Only title is used really, which could be hardcoded but leaving as a graphql query for now\n  // note: gatsby graphql actually replaces the query expression (the graphql`someQuery` stuff) in the AST. And can't use expression interpolation either. (If they brought out the big cannons, I wonder why they used tagged template syntax?) Seems like a misguided use of the clever stick.\n  // htmlAttributes ignored in Helmet todo: maybe investigate (for setting background on html el)\n  return <StaticQuery\n    query={graphql `\n      query HeadingQuery {\n        site {\n          siteMetadata {\n            title\n            baseUrl\n          }\n        }\n      }\n    `}\n    render={data => {\n      const meta = dotProp.get(data, 'site.siteMetadata');\n      return <Helmet bodyAttributes={bodyAttributes}>\n        <html lang=\"en\" />\n        <title>{meta.title}</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <meta property=\"robots\" content=\"noarchive\" />\n\n        {/*<meta name=\"description\" content={siteMetadata.siteDescription} />*/}\n        <meta property=\"og:locale\" content=\"en_US\" />\n        {/*<meta property=\"og:site_name\" content=\"ferbs.com\" />*/}\n        <meta property=\"og:url\" content={meta.baseUrl} />\n        <meta property=\"og:title\" content={meta.title} />\n\n        {/*<meta property=\"og:description\" content={siteMetadata.siteDescription} />*/}\n\n        { /* favicons created using https://realfavicongenerator.net */}\n        <link rel=\"apple-touch-icon\" sizes=\"60x60\" href=\"/favicons/apple-touch-icon-60x60.png\"/>\n        <link rel=\"apple-touch-icon\" sizes=\"76x76\" href=\"/favicons/apple-touch-icon-76x76.png\"/>\n        <link rel=\"apple-touch-icon\" sizes=\"120x120\" href=\"/favicons/apple-touch-icon-120x120.png\"/>\n        <link rel=\"apple-touch-icon\" sizes=\"152x152\" href=\"/favicons/apple-touch-icon-152x152.png\"/>\n        <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/favicons/apple-touch-icon-180x180.png\"/>\n        <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/favicons/favicon-32x32.png\"/>\n        <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/favicons/favicon-16x16.png\"/>\n        <link rel=\"manifest\" href=\"/favicons/site.webmanifest\"/>\n        <link rel=\"mask-icon\" href=\"/favicons/safari-pinned-tab.svg\" color=\"#5bbad5\"/>\n        <link rel=\"shortcut icon\" href=\"/favicons/favicon.ico\"/>\n        <meta name=\"msapplication-TileColor\" content=\"#da532c\"/>\n        <meta name=\"msapplication-config\" content=\"/favicons/browserconfig.xml\"/>\n        <meta name=\"theme-color\" content=\"#ffffff\"/>\n      </Helmet>;\n    }}\n  />\n}\n\nexport default Page;\n\n"],"sourceRoot":""}