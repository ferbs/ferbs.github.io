{"version":3,"sources":["webpack:///./node_modules/granim/index.js","webpack:///./node_modules/granim/lib/Granim.js","webpack:///./node_modules/granim/lib/animateColors.js","webpack:///./node_modules/granim/lib/changeBlendingMode.js","webpack:///./node_modules/granim/lib/changeDirection.js","webpack:///./node_modules/granim/lib/changeState.js","webpack:///./node_modules/granim/lib/clear.js","webpack:///./node_modules/granim/lib/convertColorToRgba.js","webpack:///./node_modules/granim/lib/destroy.js","webpack:///./node_modules/granim/lib/eventPolyfill.js","webpack:///./node_modules/granim/lib/getColor.js","webpack:///./node_modules/granim/lib/getColorDiff.js","webpack:///./node_modules/granim/lib/getColorPos.js","webpack:///./node_modules/granim/lib/getColorPosDiff.js","webpack:///./node_modules/granim/lib/getCurrentColors.js","webpack:///./node_modules/granim/lib/getCurrentColorsPos.js","webpack:///./node_modules/granim/lib/getDimensions.js","webpack:///./node_modules/granim/lib/getElement.js","webpack:///./node_modules/granim/lib/getLightness.js","webpack:///./node_modules/granim/lib/makeGradient.js","webpack:///./node_modules/granim/lib/onResize.js","webpack:///./node_modules/granim/lib/onScroll.js","webpack:///./node_modules/granim/lib/pause.js","webpack:///./node_modules/granim/lib/pauseWhenNotInView.js","webpack:///./node_modules/granim/lib/play.js","webpack:///./node_modules/granim/lib/prepareImage.js","webpack:///./node_modules/granim/lib/refreshColorsAndPos.js","webpack:///./node_modules/granim/lib/setColors.js","webpack:///./node_modules/granim/lib/setDirection.js","webpack:///./node_modules/granim/lib/setSizeAttributes.js","webpack:///./node_modules/granim/lib/triggerError.js","webpack:///./node_modules/granim/lib/validateInput.js"],"names":["module","exports","__webpack_require__","Granim","options","this","getElement","element","x1","y1","name","elToSetClassOn","direction","customDirection","validateInput","isPausedWhenNotInView","states","stateTransitionSpeed","previousTimeStamp","progress","isPaused","isCleared","isPausedBecauseNotInView","context","canvas","getContext","channels","channelsIndex","activeState","defaultStateName","isChangingState","currentColors","currentColorsPos","activetransitionSpeed","eventPolyfill","scrollDebounceThreshold","scrollDebounceTimeout","isImgLoaded","isCanvasInWindowView","firstScrollInit","animating","gradientLength","gradients","length","image","source","position","stretchMode","blendingMode","events","start","CustomEvent","end","gradientChange","details","detail","isLooping","colorsFrom","colorsTo","bubbles","cancelable","callbacks","onStart","onGradientChange","onEnd","getDimensions","setAttribute","setColors","prepareImage","pauseWhenNotInViewNameSpace","pauseWhenNotInView","bind","setSizeAttributesNameSpace","setSizeAttributes","onResize","onScroll","refreshColorsAndPos","animation","requestAnimationFrame","animateColors","dispatchEvent","prototype","changeBlendingMode","changeDirection","changeState","clear","convertColorToRgba","destroy","getColor","getColorDiff","getColorPos","getColorPosDiff","getCurrentColors","getCurrentColorsPos","getLightness","makeGradient","pause","play","setDirection","triggerError","timestamp","progressPercent","nextGradient","wasWindowIdled","isLoop","undefined","loop","toFixed","transitionSpeed","cancelAnimationFrame","newBlendingMode","clearRect","globalCompositeOperation","newDirection","newState","_this","activeColorsDiff","activeColorsPosDiff","activeColors","activeColorsPos","forEach","gradientColor","i","arr","nextColors","nextColorsPos","colorDiff","colorPosDiff","push","match","regex","hexa","rgba","rgb","hsla","hsl","hue2rgb","p","q","t","hslaToRgb","h","s","l","a","r","g","b","Math","round","color","colorTypes","Object","keys","exec","identifyColorType","hex","replace","m","result","parseInt","hexToRgba","parseFloat","event","params","evt","document","createEvent","initCustomEvent","window","Event","colorA","colorB","pos","posA","posB","j","offsetWidth","offsetHeight","HTMLCanvasElement","Error","querySelector","lightnessAverage","gradientAverage","colorsAverage","map","el","max","gradient","elToSetClassOnClass","classList","drawImage","imageNode","imagePosition","x","y","width","height","addColorStop","remove","add","fillStyle","fillRect","type","addEventListener","removeEventListener","state","clearTimeout","setTimeout","elPos","getBoundingClientRect","bottom","right","left","innerWidth","top","innerHeight","setImagePosition","setImageAxisPosition","axis","imageAxisPosition","canvasWidthOrHeight","imgOriginalWidthOrHeight","imageAlignIndex","Image","onerror","onload","imgOriginalWidth","imgOriginalHeight","src","activeChannel","activeChannelPos","ceil","colors","colorsDiff","colorsPos","colorsPosDiff","colorPos","rgbaColor","isCurrentColorsSet","getCustomCoordinateInPixels","coordinate","size","indexOf","split","ctx","createLinearGradient","createRadialGradient","x0","y0","inputType","stretchModeValues","Array","isArray","array","value","definedInPixelsOrPercentage","splittedValue","unit","filter","test","areDefinedInPixelsOrPercentage"],"mappings":"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","file":"7-4be01c72981144d213dd.js","sourcesContent":["module.exports = require('./lib/Granim.js');\r\n","'use strict';\r\n\r\nfunction Granim(options) {\r\n\tthis.getElement(options.element);\r\n\tthis.x1 = 0;\r\n\tthis.y1 = 0;\r\n\tthis.name = options.name || false;\r\n\tthis.elToSetClassOn = options.elToSetClassOn || 'body';\r\n\tthis.direction = options.direction || 'diagonal';\r\n\tthis.customDirection = options.customDirection || {};\r\n\tthis.validateInput('direction');\r\n\tthis.isPausedWhenNotInView = options.isPausedWhenNotInView || false;\r\n\tthis.states = options.states;\r\n\tthis.stateTransitionSpeed = options.stateTransitionSpeed || 1000;\r\n\tthis.previousTimeStamp = null;\r\n\tthis.progress = 0;\r\n\tthis.isPaused = false;\r\n\tthis.isCleared = false;\r\n\tthis.isPausedBecauseNotInView = false;\r\n\tthis.context = this.canvas.getContext('2d');\r\n\tthis.channels = {};\r\n\tthis.channelsIndex = 0;\r\n\tthis.activeState = options.defaultStateName || 'default-state';\r\n\tthis.isChangingState = false;\r\n\tthis.currentColors = [];\r\n\tthis.currentColorsPos = [];\r\n\tthis.activetransitionSpeed = null;\r\n\tthis.eventPolyfill();\r\n\tthis.scrollDebounceThreshold = options.scrollDebounceThreshold || 300;\r\n\tthis.scrollDebounceTimeout = null;\r\n\tthis.isImgLoaded = false;\r\n\tthis.isCanvasInWindowView = false;\r\n\tthis.firstScrollInit = true;\r\n\tthis.animating = false;\r\n\tthis.gradientLength = this.states[this.activeState].gradients[0].length;\r\n\tif (options.image && options.image.source) {\r\n\t\tthis.image = {\r\n\t\t\tsource: options.image.source,\r\n\t\t\tposition: options.image.position || ['center', 'center'],\r\n\t\t\tstretchMode: options.image.stretchMode || false,\r\n\t\t\tblendingMode: options.image.blendingMode || false\r\n\t\t};\r\n\t}\r\n\tthis.events = {\r\n\t\tstart: new CustomEvent('granim:start'),\r\n\t\tend: new CustomEvent('granim:end'),\r\n\t\tgradientChange: function(details) {\r\n\t\t\treturn new CustomEvent('granim:gradientChange', {\r\n\t\t\t\tdetail: {\r\n\t\t\t\t\tisLooping: details.isLooping,\r\n\t\t\t\t\tcolorsFrom: details.colorsFrom,\r\n\t\t\t\t\tcolorsTo: details.colorsTo,\r\n\t\t\t\t\tactiveState: details.activeState\r\n\t\t\t\t},\r\n\t\t\t\tbubbles: false,\r\n\t\t\t\tcancelable: false\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\tthis.callbacks = {\r\n\t\tonStart: typeof options.onStart === 'function' ? options.onStart : false,\r\n\t\tonGradientChange: typeof options.onGradientChange === 'function' ?\r\n\t\t\toptions.onGradientChange :\r\n\t\t\tfalse,\r\n\t\tonEnd: typeof options.onEnd === 'function' ? options.onEnd : false\r\n\t};\r\n\tthis.getDimensions();\r\n\tthis.canvas.setAttribute('width', this.x1);\r\n\tthis.canvas.setAttribute('height', this.y1);\r\n\tthis.setColors();\r\n\r\n\tif (this.image) {\r\n\t\tthis.validateInput('image');\r\n\t\tthis.prepareImage();\r\n\t}\r\n\r\n\tthis.pauseWhenNotInViewNameSpace = this.pauseWhenNotInView.bind(this);\r\n\tthis.setSizeAttributesNameSpace = this.setSizeAttributes.bind(this);\r\n\tthis.onResize();\r\n\r\n\tif (this.isPausedWhenNotInView) {\r\n\t\tthis.onScroll();\r\n\t\t\r\n\t} else {\r\n\t\tif (!this.image) {\r\n\t\t\tthis.refreshColorsAndPos();\r\n\t\t\tthis.animation = requestAnimationFrame(this.animateColors.bind(this));\r\n\t\t\tthis.animating = true;\r\n\t\t}\r\n\t}\r\n\r\n\t// Callback and Event\r\n\tif (this.callbacks.onStart) this.callbacks.onStart();\r\n\tthis.canvas.dispatchEvent(this.events.start);\r\n}\r\n\r\nGranim.prototype.animateColors = require('./animateColors.js');\r\nGranim.prototype.changeBlendingMode = require('./changeBlendingMode.js');\r\nGranim.prototype.changeDirection = require('./changeDirection.js');\r\nGranim.prototype.changeState = require('./changeState.js');\r\nGranim.prototype.clear = require('./clear.js');\r\nGranim.prototype.convertColorToRgba = require('./convertColorToRgba.js');\r\nGranim.prototype.destroy = require('./destroy.js');\r\nGranim.prototype.eventPolyfill = require('./eventPolyfill.js');\r\nGranim.prototype.getColor = require('./getColor.js');\r\nGranim.prototype.getColorDiff = require('./getColorDiff.js');\r\nGranim.prototype.getColorPos = require('./getColorPos.js');\r\nGranim.prototype.getColorPosDiff = require('./getColorPosDiff.js');\r\nGranim.prototype.getCurrentColors = require('./getCurrentColors.js');\r\nGranim.prototype.getCurrentColorsPos = require('./getCurrentColorsPos.js');\r\nGranim.prototype.getDimensions = require('./getDimensions.js');\r\nGranim.prototype.getElement = require('./getElement.js');\r\nGranim.prototype.getLightness = require('./getLightness.js');\r\nGranim.prototype.makeGradient = require('./makeGradient.js');\r\nGranim.prototype.onResize = require('./onResize.js');\r\nGranim.prototype.onScroll = require('./onScroll.js');\r\nGranim.prototype.pause = require('./pause.js');\r\nGranim.prototype.pauseWhenNotInView = require('./pauseWhenNotInView.js');\r\nGranim.prototype.play = require('./play.js');\r\nGranim.prototype.prepareImage = require('./prepareImage.js');\r\nGranim.prototype.refreshColorsAndPos = require('./refreshColorsAndPos.js');\r\nGranim.prototype.setColors = require('./setColors.js');\r\nGranim.prototype.setDirection = require('./setDirection.js');\r\nGranim.prototype.setSizeAttributes = require('./setSizeAttributes.js');\r\nGranim.prototype.triggerError = require('./triggerError.js');\r\nGranim.prototype.validateInput = require('./validateInput.js');\r\n\r\nmodule.exports = Granim;\r\n","'use strict';\r\n\r\nmodule.exports = function(timestamp) {\r\n\tvar wasWindowIdled = timestamp - this.previousTimeStamp > 100;\r\n\tvar isLoop = this.states[this.activeState].loop !== undefined ? this.states[this.activeState].loop : true;\r\n\tvar progressPercent, isLooping, nextGradient;\r\n\r\n\t// If tab was inactive then resumed, reset the previous timestamp\r\n\tif (this.previousTimeStamp === null || wasWindowIdled) {\r\n\t\tthis.previousTimeStamp = timestamp;\r\n\t}\r\n\r\n\t// Compute progress and save the timestamp\r\n\tthis.progress = this.progress + (timestamp - this.previousTimeStamp);\r\n\tprogressPercent = (this.progress / this.activetransitionSpeed * 100).toFixed(2);\r\n\tthis.previousTimeStamp = timestamp;\r\n\r\n\t// Set the new gradient colors in a property\r\n\tthis.refreshColorsAndPos(progressPercent);\r\n\r\n\t// Continue the animation or prepare for the next one\r\n\tif (progressPercent < 100) {\r\n\t\tthis.animation = requestAnimationFrame(this.animateColors.bind(this));\r\n\r\n\t} else {\r\n\t\t// if the current animation index is inferior to the penultimate gradient\r\n\t\t// or to the last gradient with the loop mode activated\r\n\t\tif (this.channelsIndex < this.states[this.activeState].gradients.length - 2 || isLoop) {\r\n\r\n\t\t\t// Set the active transition speed to the active state one after changing state\r\n\t\t\tif (this.isChangingState) {\r\n\t\t\t\tthis.activetransitionSpeed = this.states[this.activeState].transitionSpeed || 5000;\r\n\t\t\t\tthis.isChangingState = false;\r\n\t\t\t}\r\n\r\n\t\t\t// Resetting properties\r\n\t\t\tthis.previousTimeStamp = null;\r\n\t\t\tthis.progress = 0;\r\n\t\t\tthis.channelsIndex++;\r\n\t\t\tisLooping = false;\r\n\r\n\t\t\t// If it's going to loop or if it's the transition after the loop\r\n\t\t\tif (this.channelsIndex === this.states[this.activeState].gradients.length - 1) {\r\n\t\t\t\tisLooping = true;\r\n\t\t\t\t\r\n\t\t\t} else if (this.channelsIndex === this.states[this.activeState].gradients.length) {\r\n\t\t\t\tthis.channelsIndex = 0;\r\n\t\t\t}\r\n\r\n\t\t\t// Checking the next gradient to send in args of an event and a callback\r\n\t\t\tnextGradient = this.states[this.activeState].gradients[this.channelsIndex + 1] === undefined ?\r\n\t\t\t\tthis.states[this.activeState].gradients[0] :\r\n\t\t\t\tthis.states[this.activeState].gradients[this.channelsIndex + 1];\r\n\r\n\t\t\t// Compute the colors for the transition and render a new frame\r\n\t\t\tthis.setColors();\r\n\t\t\tthis.animation = requestAnimationFrame(this.animateColors.bind(this));\r\n\t\t\t\r\n\t\t\t// Callback and Event\r\n\t\t\tif (this.callbacks.onGradientChange) {\r\n\t\t\t\tthis.callbacks.onGradientChange({\r\n\t\t\t\t\tisLooping: isLooping,\r\n\t\t\t\t\tcolorsFrom: this.states[this.activeState].gradients[this.channelsIndex],\r\n\t\t\t\t\tcolorsTo: nextGradient,\r\n\t\t\t\t\tactiveState: this.activeState\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.canvas.dispatchEvent(this.events.gradientChange({\r\n\t\t\t\tisLooping: isLooping,\r\n\t\t\t\tcolorsFrom: this.states[this.activeState].gradients[this.channelsIndex],\r\n\t\t\t\tcolorsTo: nextGradient,\r\n\t\t\t\tactiveState: this.activeState\r\n\t\t\t}));\r\n\r\n\t\t// Else if it was the last gradient on the list and the loop mode is off\r\n\t\t} else {\r\n\t\t\tcancelAnimationFrame(this.animation);\r\n\r\n\t\t\t// Callback and Event\r\n\t\t\tif (this.callbacks.onEnd) this.callbacks.onEnd();\r\n\t\t\tthis.canvas.dispatchEvent(new CustomEvent('granim:end'));\r\n\t\t}\r\n\t}\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function(newBlendingMode) {\r\n\tthis.context.clearRect(0, 0, this.x1, this.y1);\r\n\tthis.context.globalCompositeOperation =\r\n\t\tthis.image.blendingMode = newBlendingMode;\r\n\tthis.validateInput('blendingMode');\r\n\tif (this.isPaused) this.refreshColorsAndPos();\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function(newDirection) {\r\n\tthis.context.clearRect(0, 0, this.x1, this.y1);\r\n\tthis.direction = newDirection;\r\n\tthis.validateInput('direction');\r\n\tif (this.isPaused) this.refreshColorsAndPos();\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function(newState) {\r\n\tvar _this = this;\r\n\r\n\t// Prevent transitioning to the same state\r\n\tif (this.activeState === newState) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Setting the good properties for the transition\r\n\tif (!this.isPaused) {\r\n\t\tthis.isPaused = true;\r\n\t\tthis.pause();\r\n\t}\r\n\r\n\tthis.channelsIndex = -1;\r\n\tthis.activetransitionSpeed = this.stateTransitionSpeed;\r\n\tthis.activeColorsDiff = [];\r\n\tthis.activeColorsPosDiff = [];\r\n\tthis.activeColors = this.getCurrentColors();\r\n\tthis.activeColorsPos = this.getCurrentColorsPos();\r\n\tthis.progress = 0;\r\n\tthis.previousTimeStamp = null;\r\n\tthis.isChangingState = true;\r\n\r\n\t// Compute the gradient color and pos diff between the last frame gradient\r\n\t// and the first one of the new state\r\n\tthis.states[newState].gradients[0].forEach(function(gradientColor, i, arr) {\r\n\t\tvar nextColors = _this.convertColorToRgba(_this.getColor(gradientColor));\r\n\t\tvar nextColorsPos = _this.getColorPos(gradientColor, i);\r\n\t\tvar colorDiff = _this.getColorDiff(_this.activeColors[i], nextColors);\r\n\t\tvar colorPosDiff = _this.getColorPosDiff(_this.activeColorsPos[i], nextColorsPos);\r\n\t\t_this.activeColorsDiff.push(colorDiff);\r\n\t\t_this.activeColorsPosDiff.push(colorPosDiff);\r\n\t});\r\n\r\n\t// Start the animation\r\n\tthis.activeState = newState;\r\n\tthis.play();\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function() {\r\n\tif (!this.isPaused) {\r\n\t\tcancelAnimationFrame(this.animation);\r\n\r\n\t} else {\r\n\t\tthis.isPaused = false;\r\n\t}\r\n\tthis.isCleared = true;\r\n\tthis.context.clearRect(0, 0, this.x1, this.y1);\r\n};\r\n","'use strict';\r\n\r\nvar regex = {\r\n\thexa: /^#(?:[0-9a-fA-F]{3}){1,2}$/,\r\n\trgba: /^rgba\\((\\d{1,3}), ?(\\d{1,3}), ?(\\d{1,3}), ?(.?\\d{1,3})\\)$/,\r\n\trgb: /^rgb\\((\\d{1,3}), ?(\\d{1,3}), ?(\\d{1,3})\\)$/,\r\n\thsla: /^hsla\\((\\d{1,3}), ?(\\d{1,3})%, ?(\\d{1,3})%, ?(.?\\d{1,3})\\)$/,\r\n\thsl: /^hsl\\((\\d{1,3}), ?(\\d{1,3})%, ?(\\d{1,3})%\\)$/\r\n}, match;\r\n\r\nmodule.exports = function(color) {\r\n\tswitch(identifyColorType(color)) {\r\n\t\tdefault:\r\n\t\t\tthis.triggerError('colorType');\r\n\r\n\t\tcase 'hexa':\r\n\t\t\treturn hexToRgba(color);\r\n\r\n\t\tcase 'rgba':\r\n\t\t\treturn [\r\n\t\t\t\tparseInt(match[1], 10),\r\n\t\t\t\tparseInt(match[2], 10),\r\n\t\t\t\tparseInt(match[3], 10),\r\n\t\t\t\tparseFloat(match[4])\r\n\t\t\t];\r\n\r\n\t\tcase 'rgb':\r\n\t\t\treturn [\r\n\t\t\t\tparseInt(match[1], 10),\r\n\t\t\t\tparseInt(match[2], 10),\r\n\t\t\t\tparseInt(match[3], 10),\r\n\t\t\t\t1\r\n\t\t\t];\r\n\r\n\t\tcase 'hsla':\r\n\t\t\treturn hslaToRgb(\r\n\t\t\t\tparseInt(match[1], 10) / 360,\r\n\t\t\t\tparseInt(match[2], 10) / 100,\r\n\t\t\t\tparseInt(match[3], 10) / 100,\r\n\t\t\t\tparseFloat(match[4])\r\n\t\t\t);\r\n\r\n\t\tcase 'hsl':\r\n\t\t\treturn hslaToRgb(\r\n\t\t\t\tparseInt(match[1], 10) / 360,\r\n\t\t\t\tparseInt(match[2], 10) / 100,\r\n\t\t\t\tparseInt(match[3], 10) / 100,\r\n\t\t\t\t1\r\n\t\t\t);\r\n\t}\r\n};\r\n\r\nfunction identifyColorType(color) {\r\n\tvar colorTypes = Object.keys(regex);\r\n\tvar i = 0;\r\n\tfor (i; i < colorTypes.length; i++) {\r\n\t\tmatch = regex[colorTypes[i]].exec(color);\r\n\t\tif (match) return colorTypes[i];\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nfunction hexToRgba(hex) {\r\n\t// Expand shorthand form (e.g. '03F') to full form (e.g. '0033FF')\r\n\tvar shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n\thex = hex.replace(shorthandRegex, function(m, r, g, b) {\r\n\t\treturn r + r + g + g + b + b;\r\n\t});\r\n\tvar result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n\treturn result ? [\r\n\t\tparseInt(result[1], 16),\r\n\t\tparseInt(result[2], 16),\r\n\t\tparseInt(result[3], 16),\r\n\t\t1\r\n\t] : null;\r\n}\r\n\r\nfunction hue2rgb(p, q, t) {\r\n\tif (t < 0) t += 1;\r\n\tif (t > 1) t -= 1;\r\n\tif (t < 1 / 6) return p + (q - p) * 6 * t;\r\n\tif (t < 1 / 2) return q;\r\n\tif (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\r\n\treturn p;\r\n}\r\n\r\nfunction hslaToRgb(h, s, l, a) {\r\n\tvar r, g, b, q, p;\r\n\tif (s === 0) {\r\n\t\tr = g = b = l; // achromatic\r\n\t} else {\r\n\t\tq = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n\t\tp = 2 * l - q;\r\n\t\tr = hue2rgb(p, q, h + 1/3);\r\n\t\tg = hue2rgb(p, q, h);\r\n\t\tb = hue2rgb(p, q, h - 1/3);\r\n\t}\r\n\treturn [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255), a];\r\n}\r\n","'use strict';\r\n\r\nmodule.exports = function() {\r\n\tthis.onResize('removeListeners');\r\n\tthis.onScroll('removeListeners');\r\n\tthis.clear();\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function() {\r\n\tif ( typeof window.CustomEvent === 'function' ) return;\r\n\r\n\tfunction CustomEvent(event, params) {\r\n\t\tparams = params || { bubbles: false, cancelable: false, detail: undefined };\r\n\t\tvar evt = document.createEvent('CustomEvent');\r\n\t\tevt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\r\n\t\treturn evt;\r\n\t}\r\n\r\n\tCustomEvent.prototype = window.Event.prototype;\r\n\r\n\twindow.CustomEvent = CustomEvent;\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function(gradientColor) {\r\n\tif (typeof gradientColor === 'string') {\r\n\t\treturn gradientColor;\r\n\r\n\t} else if (typeof gradientColor === 'object' && gradientColor.color) {\r\n\t\treturn gradientColor.color;\r\n\r\n\t} else {\r\n\t\tthis.triggerError('gradient.color');\r\n\t}\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function(colorA, colorB) {\r\n\tvar i = 0;\r\n\tvar colorDiff = [];\r\n\r\n\tfor (i; i < 4; i++) {\r\n\t\tcolorDiff.push(colorB[i] - colorA[i]);\r\n\t}\r\n\r\n\treturn colorDiff;\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function(gradientColor, i) {\r\n\tif (typeof gradientColor === 'object' && gradientColor.pos) {\r\n\t\treturn gradientColor.pos;\r\n\r\n\t} else {\r\n\t\t// Ensure first and last position to be 0 and 100\r\n\t\treturn parseFloat(!i ? 0 : ((1 / (this.gradientLength - 1)) * i).toFixed(2));\r\n\t}\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function(posA, posB) {\r\n\treturn posB - posA;\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function() {\r\n\tvar i, j;\r\n\tvar currentColors = [];\r\n\r\n\tfor (i = 0; i < this.currentColors.length; i++) {\r\n\t\tcurrentColors.push([]);\r\n\r\n\t\tfor (j = 0; j < 4; j++) {\r\n\t\t\tcurrentColors[i].push(this.currentColors[i][j]);\r\n\t\t}\r\n\t}\r\n\r\n\t// Return a deep copy of the current colors\r\n\treturn currentColors;\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function() {\r\n\tvar currentColorsPos = [], i;\r\n\r\n\tfor (i = 0; i < this.currentColorsPos.length; i++) {\r\n\t\tcurrentColorsPos.push(this.currentColorsPos[i]);\r\n\t}\r\n\r\n\t// Return a deep copy of the current colors\r\n\treturn currentColorsPos;\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function() {\r\n\tthis.x1 = this.canvas.offsetWidth;\r\n\tthis.y1 = this.canvas.offsetHeight;\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function(element) {\r\n\tif (element instanceof HTMLCanvasElement) {\r\n\t\tthis.canvas = element;\r\n\r\n\t} else if (typeof element === 'string') {\r\n\t\tthis.canvas = document.querySelector(element);\r\n\r\n\t} else {\r\n\t\tthrow new Error('The element you used is neither a String, nor a HTMLCanvasElement');\r\n\t}\r\n\r\n\tif (!this.canvas) {\r\n\t\tthrow new Error('`' + element + '` could not be found in the DOM');\r\n\t}\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function() {\r\n\tvar currentColors = this.getCurrentColors();\r\n\tvar gradientAverage = null;\r\n\tvar lightnessAverage, i;\r\n\tvar colorsAverage = currentColors.map(function(el) {\r\n\t\t// Compute the average lightness of each color\r\n\t\t// in the current gradient\r\n\t\treturn Math.max(el[0], el[1], el[2]);\r\n\t});\r\n\r\n\tfor (i = 0; i < colorsAverage.length; i++) {\r\n\t\t// Add all the average lightness of each color\r\n\t\tgradientAverage = gradientAverage === null ?\r\n\t\t\tcolorsAverage[i] : gradientAverage + colorsAverage[i];\r\n\r\n\t\tif (i === colorsAverage.length - 1) {\r\n\t\t\t// if it's the last lightness average\r\n\t\t\t// divide it by the total length to\r\n\t\t\t// have the global average lightness\r\n\t\t\tlightnessAverage = Math.round(gradientAverage / (i + 1));\r\n\t\t}\r\n\t}\r\n\r\n\treturn lightnessAverage >= 128 ? 'light' : 'dark';\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function() {\r\n\tvar gradient = this.setDirection();\r\n\tvar elToSetClassOnClass = document.querySelector(this.elToSetClassOn).classList;\r\n\tvar i = 0;\r\n\tthis.context.clearRect(0, 0, this.x1, this.y1);\r\n\r\n\tif (this.image) {\r\n\t\tthis.context.drawImage(\r\n\t\t\tthis.imageNode,\r\n\t\t\tthis.imagePosition.x,\r\n\t\t\tthis.imagePosition.y,\r\n\t\t\tthis.imagePosition.width,\r\n\t\t\tthis.imagePosition.height\r\n\t\t);\r\n\t}\r\n\r\n\tfor (i; i < this.currentColors.length; i++) {\r\n\t\tgradient.addColorStop(this.currentColorsPos[i], 'rgba(' +\r\n\t\t\tthis.currentColors[i][0] + ', ' +\r\n\t\t\tthis.currentColors[i][1] + ', ' +\r\n\t\t\tthis.currentColors[i][2] + ', ' +\r\n\t\t\tthis.currentColors[i][3] + ')'\r\n\t\t);\r\n\t}\r\n\r\n\tif (this.name) {\r\n\t\tif (this.getLightness() === 'light') {\r\n\t\t\telToSetClassOnClass.remove(this.name + '-dark');\r\n\t\t\telToSetClassOnClass.add(this.name + '-light');\r\n\r\n\t\t} else {\r\n\t\t\telToSetClassOnClass.remove(this.name + '-light');\r\n\t\t\telToSetClassOnClass.add(this.name + '-dark');\r\n\t\t}\r\n\t}\r\n\r\n\tthis.context.fillStyle = gradient;\r\n\tthis.context.fillRect(0, 0, this.x1, this.y1);\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function(type) {\r\n\tif (type === 'removeListeners') {\r\n\t\twindow.removeEventListener('resize', this.setSizeAttributesNameSpace);\r\n\t\treturn;\r\n\t}\r\n\r\n\twindow.addEventListener('resize', this.setSizeAttributesNameSpace);\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function(type) {\r\n\tif (type === 'removeListeners') {\r\n\t\twindow.removeEventListener('scroll', this.pauseWhenNotInViewNameSpace);\r\n\t\treturn;\r\n\t}\r\n\r\n\twindow.addEventListener('scroll', this.pauseWhenNotInViewNameSpace);\r\n\tthis.pauseWhenNotInViewNameSpace();\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function(state) {\r\n\tvar isPausedBecauseNotInView = state === 'isPausedBecauseNotInView';\r\n\tif (this.isCleared) return;\r\n\tif (!isPausedBecauseNotInView) this.isPaused = true;\r\n\tcancelAnimationFrame(this.animation);\r\n\tthis.animating = false;\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function() {\r\n\tvar _this = this;\r\n\tif (this.scrollDebounceTimeout) clearTimeout(this.scrollDebounceTimeout);\r\n\r\n\tthis.scrollDebounceTimeout = setTimeout(function() {\r\n\t\tvar elPos = _this.canvas.getBoundingClientRect();\r\n\t\t_this.isCanvasInWindowView = !(elPos.bottom < 0 || elPos.right < 0 ||\r\n\t\t\telPos.left > window.innerWidth || elPos.top > window.innerHeight);\r\n\r\n\t\tif (_this.isCanvasInWindowView) {\r\n\t\t\tif (!_this.isPaused || _this.firstScrollInit) {\r\n\t\t\t\tif (_this.image && !_this.isImgLoaded) {return;}\r\n\t\t\t\t_this.isPausedBecauseNotInView = false;\r\n\t\t\t\t_this.play('isPlayedBecauseInView');\r\n\t\t\t\t_this.firstScrollInit = false;\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tif (!_this.image && _this.firstScrollInit) {\r\n\t\t\t\t_this.refreshColorsAndPos();\r\n\t\t\t\t_this.firstScrollInit = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (!_this.isPaused && !_this.isPausedBecauseNotInView) {\r\n\t\t\t\t_this.isPausedBecauseNotInView = true;\r\n\t\t\t\t_this.pause('isPausedBecauseNotInView');\r\n\t\t\t}\r\n\t\t}\r\n\t}, this.scrollDebounceThreshold);\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function(state) {\r\n\tvar isPlayedBecauseInView = state === 'isPlayedBecauseInView';\r\n\tif (!isPlayedBecauseInView) this.isPaused = false;\r\n\tthis.isCleared = false;\r\n\tif (!this.animating) {\r\n\t\tthis.animation = requestAnimationFrame(this.animateColors.bind(this));\r\n\t\tthis.animating = true;\r\n\t}\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function() {\r\n\tvar _this = this;\r\n\r\n\tif (!this.imagePosition) {\r\n\t\tthis.imagePosition = { x: 0, y: 0, width: 0, height: 0 };\r\n\t}\r\n\r\n\tif (this.image.blendingMode) {\r\n\t\tthis.context.globalCompositeOperation = this.image.blendingMode;\r\n\t}\r\n\r\n\tif (this.imageNode) {\r\n\t\tsetImagePosition();\r\n\t\treturn;\r\n\t}\r\n\r\n\tthis.imageNode = new Image();\r\n\tthis.imageNode.onerror = function() {\r\n\t\tthrow new Error('Granim: The image source is invalid.');\r\n\t};\r\n\tthis.imageNode.onload = function() {\r\n\t\t_this.imgOriginalWidth = _this.imageNode.width;\r\n\t\t_this.imgOriginalHeight = _this.imageNode.height;\r\n\t\tsetImagePosition();\r\n\t\t_this.refreshColorsAndPos();\r\n\t\tif (!_this.isPausedWhenNotInView || _this.isCanvasInWindowView) {\r\n\t\t\t_this.animation = requestAnimationFrame(_this.animateColors.bind(_this));\r\n\t\t}\r\n\t\t_this.isImgLoaded = true;\r\n\t};\r\n\tthis.imageNode.src = this.image.source;\r\n\r\n\tfunction setImagePosition() {\r\n\t\tvar i, currentAxis;\r\n\r\n\t\tfor (i = 0; i < 2; i++) {\r\n\t\t\tcurrentAxis = !i ? 'x' : 'y';\r\n\t\t\tsetImageAxisPosition(currentAxis);\r\n\t\t}\r\n\r\n\t\tfunction setImageAxisPosition(axis) {\r\n\t\t\tvar canvasWidthOrHeight = _this[axis + '1'];\r\n\t\t\tvar imgOriginalWidthOrHeight = _this[axis === 'x' ? 'imgOriginalWidth' : 'imgOriginalHeight'];\r\n\t\t\tvar imageAlignIndex = axis === 'x' ? _this.image.position[0] : _this.image.position[1];\r\n\t\t\tvar imageAxisPosition;\r\n\t\t\tswitch(imageAlignIndex) {\r\n\t\t\t\tcase 'center':\r\n\t\t\t\t\timageAxisPosition = imgOriginalWidthOrHeight > canvasWidthOrHeight\r\n\t\t\t\t\t\t? -(imgOriginalWidthOrHeight - canvasWidthOrHeight) / 2\r\n\t\t\t\t\t\t: (canvasWidthOrHeight - imgOriginalWidthOrHeight) / 2;\r\n\t\t\t\t\t_this.imagePosition[axis] = imageAxisPosition;\r\n\t\t\t\t\t_this.imagePosition[axis === 'x' ? 'width' : 'height'] = imgOriginalWidthOrHeight;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'top':\r\n\t\t\t\t\t_this.imagePosition['y'] = 0;\r\n\t\t\t\t\t_this.imagePosition['height'] = imgOriginalWidthOrHeight;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'bottom':\r\n\t\t\t\t\t_this.imagePosition['y'] = canvasWidthOrHeight - imgOriginalWidthOrHeight;\r\n\t\t\t\t\t_this.imagePosition['height'] = imgOriginalWidthOrHeight;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'right':\r\n\t\t\t\t\t_this.imagePosition['x'] = canvasWidthOrHeight - imgOriginalWidthOrHeight;\r\n\t\t\t\t\t_this.imagePosition['width'] = imgOriginalWidthOrHeight;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'left':\r\n\t\t\t\t\t_this.imagePosition['x'] = 0;\r\n\t\t\t\t\t_this.imagePosition['width'] = imgOriginalWidthOrHeight;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif (_this.image.stretchMode) {\r\n\t\t\t\timageAlignIndex = axis === 'x' ? _this.image.stretchMode[0] : _this.image.stretchMode[1];\r\n\t\t\t\tswitch(imageAlignIndex) {\r\n\t\t\t\t\tcase 'none':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'stretch':\r\n\t\t\t\t\t\t_this.imagePosition[axis] = 0;\r\n\t\t\t\t\t\t_this.imagePosition[axis === 'x' ? 'width' : 'height'] = canvasWidthOrHeight;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'stretch-if-bigger':\r\n\t\t\t\t\t\tif (imgOriginalWidthOrHeight < canvasWidthOrHeight) break;\r\n\t\t\t\t\t\t_this.imagePosition[axis] = 0;\r\n\t\t\t\t\t\t_this.imagePosition[axis === 'x' ? 'width' : 'height'] = canvasWidthOrHeight;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'stretch-if-smaller':\r\n\t\t\t\t\t\tif (imgOriginalWidthOrHeight > canvasWidthOrHeight) break;\r\n\t\t\t\t\t\t_this.imagePosition[axis] = 0;\r\n\t\t\t\t\t\t_this.imagePosition[axis === 'x' ? 'width' : 'height'] = canvasWidthOrHeight;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function(progressPercent) {\r\n\tvar _this = this, activeChannel, activeChannelPos, i, j;\r\n\r\n\t// Loop through each colors of the active gradient\r\n\tfor (i = 0; i < this.activeColors.length; i++) {\r\n\r\n\t\t// Generate RGBA colors\r\n\t\tfor (j = 0; j < 4; j++) {\r\n\t\t\t// If color value [0-255] round to the integer,\r\n\t\t\t// Else if opacity [0-1] round to 2 decimals\r\n\t\t\tactiveChannel = _this.activeColors[i][j] +\r\n\t\t\t\t(j !== 3\r\n\t\t\t\t\t? Math.ceil(_this.activeColorsDiff[i][j] / 100 * progressPercent)\r\n\t\t\t\t\t: Math.round((_this.activeColorsDiff[i][j] / 100 * progressPercent) * 100) / 100\r\n\t\t\t\t);\r\n\r\n\t\t\t// Prevent colors values from going < 0 & > 255\r\n\t\t\tif (activeChannel <= 255 && activeChannel >= 0) {\r\n\t\t\t\t_this.currentColors[i][j] = activeChannel;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Generate gradient color position\r\n\t\tactiveChannelPos = parseFloat((_this.activeColorsPos[i] +\r\n\t\t\t(_this.activeColorsPosDiff[i] / 100 * progressPercent)\r\n\t\t).toFixed(4));\r\n\r\n\t\tif (activeChannelPos <= 1 && activeChannelPos >= 0) {\r\n\t\t\t_this.currentColorsPos[i] = activeChannelPos;\r\n\t\t}\r\n\t}\r\n\r\n\tthis.makeGradient();\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function() {\r\n\tvar _this = this, colorDiff, colorPosDiff, nextColors, nextColorsPos;\r\n\r\n\tif (!this.channels[this.activeState]) this.channels[this.activeState] = [];\r\n\r\n\t// If the actual channel exist, reassign properties and exit\r\n\t// (each channel is saved to prevent recomputing it each time)\r\n\tif (this.channels[this.activeState][this.channelsIndex] !== undefined) {\r\n\t\tthis.activeColors = this.channels[this.activeState][this.channelsIndex].colors;\r\n\t\tthis.activeColorsDiff = this.channels[this.activeState][this.channelsIndex].colorsDiff;\r\n\t\tthis.activeColorsPos = this.channels[this.activeState][this.channelsIndex].colorsPos;\r\n\t\tthis.activeColorsPosDiff = this.channels[this.activeState][this.channelsIndex].colorsPosDiff;\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Set blank properties\r\n\tthis.channels[this.activeState].push([{}]);\r\n\tthis.channels[this.activeState][this.channelsIndex].colors = [];\r\n\tthis.channels[this.activeState][this.channelsIndex].colorsDiff = [];\r\n\tthis.channels[this.activeState][this.channelsIndex].colorsPos = [];\r\n\tthis.channels[this.activeState][this.channelsIndex].colorsPosDiff = [];\r\n\tthis.activeColors = [];\r\n\tthis.activeColorsDiff = [];\r\n\tthis.activeColorsPos = [];\r\n\tthis.activeColorsPosDiff = [];\r\n\r\n\t// Go on each gradient of the current state\r\n\tthis.states[this.activeState].gradients[this.channelsIndex].forEach(function(color, i) {\r\n\t\t// Push the hex color converted to rgba on the channel and the active color properties\r\n\t\tvar colorPos = _this.getColorPos(color, i);\r\n\t\tvar color = _this.getColor(color);\r\n\t\tvar rgbaColor = _this.convertColorToRgba(color);\r\n\t\tvar activeChannel = _this.channels[_this.activeState];\r\n\r\n\t\tactiveChannel[_this.channelsIndex].colors.push(rgbaColor);\r\n\t\t_this.activeColors.push(rgbaColor);\r\n\t\tactiveChannel[_this.channelsIndex].colorsPos.push(colorPos);\r\n\t\t_this.activeColorsPos.push(colorPos);\r\n\r\n\t\t// If it's the first channel to be set, set the currentColors\r\n\t\tif (!_this.isCurrentColorsSet) {\r\n\t\t\t_this.currentColors.push(_this.convertColorToRgba(color));\r\n\t\t\t_this.currentColorsPos.push(colorPos);\r\n\t\t}\r\n\r\n\t\t// If it's the last gradient, compute the color diff between the last gradient and the first one,\r\n\t\t// else between the penultimate one and the last one\r\n\t\tif (_this.channelsIndex === _this.states[_this.activeState].gradients.length - 1) {\r\n\t\t\tcolorDiff = _this.getColorDiff(\r\n\t\t\t\tactiveChannel[_this.channelsIndex].colors[i],\r\n\t\t\t\tactiveChannel[0].colors[i]\r\n\t\t\t);\r\n\t\t\tcolorPosDiff = _this.getColorPosDiff(\r\n\t\t\t\tactiveChannel[_this.channelsIndex].colorsPos[i],\r\n\t\t\t\tactiveChannel[0].colorsPos[i]\r\n\t\t\t);\r\n\r\n\t\t} else {\r\n\t\t\tnextColors = _this.convertColorToRgba(_this.getColor(_this.states[_this.activeState].gradients[_this.channelsIndex + 1][i]));\r\n\t\t\tnextColorsPos = _this.getColorPos(_this.states[_this.activeState].gradients[_this.channelsIndex + 1][i], i);\r\n\t\t\tcolorDiff = _this.getColorDiff(activeChannel[_this.channelsIndex].colors[i], nextColors);\r\n\t\t\tcolorPosDiff = _this.getColorPosDiff(activeChannel[_this.channelsIndex].colorsPos[i], nextColorsPos);\r\n\t\t}\r\n\r\n\t\tactiveChannel[_this.channelsIndex].colorsDiff.push(colorDiff);\r\n\t\t_this.activeColorsDiff.push(colorDiff);\r\n\t\tactiveChannel[_this.channelsIndex].colorsPosDiff.push(colorPosDiff);\r\n\t\t_this.activeColorsPosDiff.push(colorPosDiff);\r\n\t});\r\n\r\n\tthis.activetransitionSpeed = this.states[this.activeState].transitionSpeed || 5000;\r\n\tthis.isCurrentColorsSet = true;\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function() {\r\n\tvar ctx = this.context;\r\n\r\n\tswitch(this.direction) {\r\n\t\tcase 'diagonal':\r\n\t\t\treturn ctx.createLinearGradient(0, 0, this.x1, this.y1);\r\n\r\n\t\tcase 'left-right':\r\n\t\t\treturn ctx.createLinearGradient(0, 0, this.x1, 0);\r\n\r\n\t\tcase 'top-bottom':\r\n\t\t\treturn ctx.createLinearGradient(this.x1 / 2, 0, this.x1 / 2, this.y1);\r\n\r\n\t\tcase 'radial':\r\n\t\t\treturn ctx.createRadialGradient(this.x1 / 2, this.y1 / 2, this.x1 / 2, this.x1 / 2, this.y1 / 2, 0);\r\n\r\n\t\tcase 'custom':\r\n\t\t\treturn ctx.createLinearGradient(\r\n\t\t\t\tgetCustomCoordinateInPixels(this.customDirection.x0, this.x1),\r\n\t\t\t\tgetCustomCoordinateInPixels(this.customDirection.y0, this.y1),\r\n\t\t\t\tgetCustomCoordinateInPixels(this.customDirection.x1, this.x1),\r\n\t\t\t\tgetCustomCoordinateInPixels(this.customDirection.y1, this.y1)\r\n\t\t\t);\r\n\t}\r\n};\r\n\r\nfunction getCustomCoordinateInPixels(coordinate, size) {\r\n\treturn coordinate.indexOf('%') > -1\r\n\t\t? size / 100 * parseInt(coordinate.split('%')[0], 10)\r\n\t\t: parseInt(coordinate.split('px')[0], 10);\r\n}\r\n","'use strict';\r\n\r\nmodule.exports = function() {\r\n\tthis.getDimensions();\r\n\tthis.canvas.setAttribute('width', this.x1);\r\n\tthis.canvas.setAttribute('height', this.y1);\r\n\tif (this.image) this.prepareImage();\r\n\tthis.refreshColorsAndPos();\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function(element) {\r\n\tvar siteURL = 'https://sarcadass.github.io/granim.js/api.html';\r\n\tthrow new Error('Granim: Input error on \"' + element + '\" option.\\nCheck the API ' + siteURL + '.');\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function(inputType) {\r\n\tvar xPositionValues = ['left', 'center', 'right'];\r\n\tvar yPositionValues = ['top', 'center', 'bottom'];\r\n\tvar stretchModeValues = ['none', 'stretch', 'stretch-if-smaller', 'stretch-if-bigger'];\r\n\tvar blendingModeValues = ['multiply', 'screen', 'normal', 'overlay', 'darken',\r\n\t\t'lighten', 'lighter', 'color-dodge', 'color-burn', 'hard-light', 'soft-light',\r\n\t\t'difference', 'exclusion', 'hue', 'saturation', 'color', 'luminosity'];\r\n\tvar directionValues = ['diagonal', 'left-right', 'top-bottom', 'radial', 'custom'];\r\n\r\n\tswitch(inputType) {\r\n\t\tcase 'image':\r\n\t\t\t// Validate image.position\r\n\t\t\tif ((!Array.isArray(this.image.position) || this.image.position.length !== 2) ||\r\n\t\t\t\txPositionValues.indexOf(this.image.position[0]) === -1 ||\r\n\t\t\t\tyPositionValues.indexOf(this.image.position[1]) === -1\r\n\t\t\t) { this.triggerError('image.position'); }\r\n\t\t\t// Validate image.stretchMode\r\n\t\t\tif (this.image.stretchMode) {\r\n\t\t\t\tif ((!Array.isArray(this.image.stretchMode) || this.image.stretchMode.length !== 2) ||\r\n\t\t\t\t\tstretchModeValues.indexOf(this.image.stretchMode[0]) === -1 ||\r\n\t\t\t\t\tstretchModeValues.indexOf(this.image.stretchMode[1]) === -1\r\n\t\t\t\t) { this.triggerError('image.stretchMode'); }\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'blendingMode':\r\n\t\t\tif (blendingModeValues.indexOf(this.image.blendingMode) === -1) {\r\n\t\t\t\tthis.clear();\r\n\t\t\t\tthis.triggerError('blendingMode');\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'direction':\r\n\t\t\tif (directionValues.indexOf(this.direction) === -1) {\r\n\t\t\t\tthis.triggerError('direction');\r\n\t\t\t} else {\r\n\t\t\t\tif (this.direction === 'custom') {\r\n\t\t\t\t\tif (!areDefinedInPixelsOrPercentage([\r\n\t\t\t\t\t\tthis.customDirection.x0,\r\n\t\t\t\t\t\tthis.customDirection.x1,\r\n\t\t\t\t\t\tthis.customDirection.y0,\r\n\t\t\t\t\t\tthis.customDirection.y1\r\n\t\t\t\t\t])) {\r\n\t\t\t\t\t\tthis.triggerError('customDirection');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t}\r\n};\r\n\r\nfunction areDefinedInPixelsOrPercentage(array) {\r\n\tvar definedInPixelsOrPercentage = true, i = 0, value;\r\n\twhile (definedInPixelsOrPercentage && i < array.length) {\r\n\t\tvalue = array[i];\r\n\t\tif (typeof value !== 'string') {\r\n\t\t\tdefinedInPixelsOrPercentage = false;\r\n\t\t} else {\r\n\t\t\tvar splittedValue = null;\r\n\t\t\tvar unit = null;\r\n\t\t\tif (value.indexOf('px') !== -1) unit = 'px';\r\n\t\t\tif (value.indexOf('%') !== -1) unit = '%';\r\n\t\t\tsplittedValue = value.split(unit).filter(function(value) {\r\n\t\t\t\treturn value.length > 0;\r\n\t\t\t});\r\n\t\t\t// Check if there is a unit ('px' or '%'),\r\n\t\t\t// a char before the unit,\r\n\t\t\t// no char after the unit,\r\n\t\t\t// the string without the unit is only composed of digits\r\n\t\t\tif (\r\n\t\t\t\t!unit\r\n\t\t\t\t|| splittedValue.length > 2\r\n\t\t\t\t|| !splittedValue[0]\r\n\t\t\t\t|| splittedValue[1]\r\n\t\t\t\t|| !/^-?\\d+\\.?\\d*$/.test(splittedValue[0])\r\n\t\t\t) {\r\n\t\t\t\tdefinedInPixelsOrPercentage = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\ti++;\r\n\t}\r\n\treturn definedInPixelsOrPercentage;\r\n}\r\n"],"sourceRoot":""}