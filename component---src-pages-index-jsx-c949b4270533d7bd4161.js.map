{"version":3,"sources":["webpack:///./src/pages/index.jsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Page.jsx","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","_components_Page__WEBPACK_IMPORTED_MODULE_1__","gatsby__WEBPACK_IMPORTED_MODULE_2__","Index","graphqlData","className","to","m","module","exports","require","default","d","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","StaticQueryContext","React","createContext","props","createElement","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","PageHead","_ref2","bodyAttributes","class","pageName","bodyClass","join","trim","htmlAttributes","style","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_5__","meta","dotProp","get","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","lang","title","name","content","property","baseUrl","rel","sizes","href","type","color","_public_static_d_2069409925_json__WEBPACK_IMPORTED_MODULE_0__","Page","_ref","Fragment","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"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","file":"component---src-pages-index-jsx-c949b4270533d7bd4161.js","sourcesContent":["import * as React from 'react'\r\nimport Page from \"../components/Page\";\r\nimport { Link } from \"gatsby\"\r\n\r\n\r\n\r\n\r\n\r\nconst Index = (graphqlData, ...extraArgs) => {\r\n  return (\r\n    <Page>\r\n      <h1>todo</h1>\r\n      <div className=\"sm:px-8 px-4 md:px-24\">\r\n        <Link to=\"/bio\">Bio</Link>\r\n      </div>\r\n    </Page>\r\n  )\r\n};\r\n\r\nexport default Index\r\n\r\n\r\n\r\n/*\r\ntodo: why did the starter include this?-\r\n          cover {\r\n            childImageSharp {\r\n              fluid(maxWidth: 350) {\r\n                ...GatsbyImageSharpFluid_withWebp\r\n              }\r\n            }\r\n          }\r\n\r\n */","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport Helmet from 'react-helmet'\nimport 'typeface-montserrat'\nimport dotProp from 'dot-prop';\nimport { StaticQuery, graphql } from 'gatsby'\nimport '../scss-support/_bulma-custom.scss';\nimport './Page.scss';\n\n\nconst Page = ({ children, pageName }) => {\n  return <>\n    <PageHead pageName={pageName}/>\n    <div className={ `page-content` }>\n      {children}\n    </div>\n  </>;\n};\n\n\nfunction PageHead({ pageName, bodyClass }) {\n  const bodyAttributes = {\n    class: [ `${pageName}-page`, bodyClass || '' ].join(' ').trim()\n  };\n  const htmlAttributes = {\n    style: 'background-color: yellow' // tmp - todo: attrib\n  };\n  // site.siteMetadata set in gatsby-config.js. Only title is used really, which could be hardcoded but leaving as a graphql query for now\n  // note: gatsby graphql actually replaces the query expression (the graphql`someQuery` stuff) in the AST. And can't use expression interpolation either. (If they brought out the big cannons, I wonder why they used tagged template syntax?) Seems like a misguided use of the clever stick.\n  return <StaticQuery\n    query={graphql `\n      query HeadingQuery {\n        site {\n          siteMetadata {\n            title\n            baseUrl\n          }\n        }\n      }\n    `}\n    render={data => {\n      const meta = dotProp.get(data, 'site.siteMetadata');\n      return <Helmet bodyAttributes={bodyAttributes} htmlAttributes={htmlAttributes}>\n        <html lang=\"en\" />\n        <title>{meta.title}</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n          \n        {/*<meta name=\"description\" content={siteMetadata.siteDescription} />*/}\n        <meta property=\"og:locale\" content=\"en_US\" />\n        {/*<meta property=\"og:site_name\" content=\"ferbs.com\" />*/}\n        <meta property=\"og:url\" content={meta.baseUrl} />\n        <meta property=\"og:title\" content={meta.title} />\n        {/*<meta property=\"og:description\" content={siteMetadata.siteDescription} />*/}\n\n        { /* favicons created using https://realfavicongenerator.net */}\n        <link rel=\"apple-touch-icon\" sizes=\"60x60\" href=\"/favicons/apple-touch-icon-60x60.png\"/>\n        <link rel=\"apple-touch-icon\" sizes=\"76x76\" href=\"/favicons/apple-touch-icon-76x76.png\"/>\n        <link rel=\"apple-touch-icon\" sizes=\"120x120\" href=\"/favicons/apple-touch-icon-120x120.png\"/>\n        <link rel=\"apple-touch-icon\" sizes=\"152x152\" href=\"/favicons/apple-touch-icon-152x152.png\"/>\n        <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/favicons/apple-touch-icon-180x180.png\"/>\n        <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/favicons/favicon-32x32.png\"/>\n        <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/favicons/favicon-16x16.png\"/>\n        <link rel=\"manifest\" href=\"/favicons/site.webmanifest\"/>\n        <link rel=\"mask-icon\" href=\"/favicons/safari-pinned-tab.svg\" color=\"#5bbad5\"/>\n        <link rel=\"shortcut icon\" href=\"/favicons/favicon.ico\"/>\n        <meta name=\"msapplication-TileColor\" content=\"#da532c\"/>\n        <meta name=\"msapplication-config\" content=\"/favicons/browserconfig.xml\"/>\n        <meta name=\"theme-color\" content=\"#ffffff\"/>\n      </Helmet>;\n    }}\n  />\n}\n\nexport default Page;\n\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}